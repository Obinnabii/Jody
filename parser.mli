type token =
  | INT of (Ast.info * int)
  | VAR of (Ast.info * string)
  | PLUS of (Ast.info)
  | MINUS of (Ast.info)
  | TIMES of (Ast.info)
  | LPAREN of (Ast.info)
  | RPAREN of (Ast.info)
  | TRUE of (Ast.info)
  | FALSE of (Ast.info)
  | EQUALS of (Ast.info)
  | NOTEQUALS of (Ast.info)
  | LESS of (Ast.info)
  | LESSEQ of (Ast.info)
  | GREATER of (Ast.info)
  | GREATEREQ of (Ast.info)
  | NOT of (Ast.info)
  | AND of (Ast.info)
  | OR of (Ast.info)
  | SKIP of (Ast.info)
  | ASSIGN of (Ast.info)
  | SEMI of (Ast.info)
  | IF of (Ast.info)
  | THEN of (Ast.info)
  | ELSE of (Ast.info)
  | WHILE of (Ast.info)
  | DO of (Ast.info)
  | LBRACE of (Ast.info)
  | RBRACE of (Ast.info)
  | BREAK of (Ast.info)
  | CONTINUE of (Ast.info)
  | TEST of (Ast.info)
  | INPUT of (Ast.info)
  | PRINT of (Ast.info)
  | EOF

val p :
  (Lexing.lexbuf  -> token) -> Lexing.lexbuf -> Ast.com
